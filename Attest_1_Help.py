#!/usr/bin/env python
# coding: utf-8

# ### Подготовка к контрольной работе

# 1. Задан список с вложенными списками (элементы - числа). Для всех списков оставить только элементы, являющиеся простыми числами. Например, из [[6,5,8], [3,4,12,33,11], [45,1,9,7]] получить [[5], [3, 11], [1, 7]].

# In[38]:


# Решение 1.
def prostoe(x):
    if x < 2:
        return False
    for i in range(2, int(x ** 0.5) + 1):
        if x % i == 0:
            return False
    return True

def filtr(xx):
    y = list(filter(prostoe, xx))
    return y

y2 = []
spisok = [[1,3,4,5],[5,3,32,7,87]]
for n in spisok:
    result = filtr(n)
    y2.append(result)
print(y2)


# 2. Переменная phones_list хранит структуру данных со списком контактов, содержащим номера телефонов. Преобразовать этот список в словарь, ключами в котором являются города, а значениями - словари, в которых номерам телефонов людей, проживающих в данном городе, сопоставлены имена этих людей.<br>
# Пример результата преобразования для данных из переменной phones_list:

# In[71]:


# Решение 2.

phones_list = [{'name':'Ivan', 'city':'Moscow', 'phones':['232-19-55', '+7 (916) 230-00-75']},
        {'name':'Anna', 'city':'Samara', 'phones':['200-11-15']},
        {'name':'Anna', 'city':'Vologda', 'phones':['+7 (931) 711-00-75']}, 
        {'name':'Nikolay', 'city':'Moscow', 'phones':['+7 (916) 778-71-05', '331-66-11', '783-33-85']},
        {'name':'Ivan', 'city':'Moscow', 'phones':['+7 (916) 205-41-05', '232-19-55']},
        {'name':'Anna', 'city':'Samara', 'phones':['+7 (916) 105-13-56']}]
d = {phones_list[i]: phones_list[i + 1] for i in range(0, len(phones_list), 2)}
print(d)


# OUT[..]
# 
# {'Moscow': {'+7 (916) 205-41-05': 'Ivan', '+7 (916) 230-00-75': 'Ivan', '+7 (916) 778-71-05': 'Nikolay', '232-19-55': 'Ivan', '331-66-11': 'Nikolay', '783-33-85': 'Nikolay'},
#   
#  'Samara': {'+7 (916) 105-13-56': 'Anna', '200-11-15': 'Anna'},
#  
#  'Vologda': {'+7 (931) 711-00-75': 'Anna'}}

# 3. Задана строка, в которой через запятую перечислены имена людей (с заглавной буквы) и их текущие занятия (со строчной буквы) в произвольном порядке (например, "Иван ест, поет Оля" и т.д.). С помощью генераторов создать словарь, в котором ключами будут имена, а значениями – занятия. <br> Решить задачу в одну строку.
# Например: "Маша гуляет, Коля работает, дома Ваня, закупается Женя" представить в виде {'Ваня': 'дома', 'Женя': 'закупается', 'Коля': 'работает', 'Маша': 'гуляет'}.

# In[62]:


# Решение 3.
s = "Иван ест, поет Оля"
sl = {s[x].isupper() for x in s}
print(sl)


# 4\*)
# 
# Реализовать калькулятор для выражений с обыкновенными дробями. Число может быть записано как правильная, неправильная или смешанная дробь (вид записи выражений приведен в примерах). Должны поддерживаться операции: +, \*. Выражение включает только одну операцию. <br>
# Задачи по мере сложности (чем более позднюю решили - тем лучше):<br>
# Результат представить как правильную дробь<br>
# 
# Пример 1: 1 3/5 + 2/3 -> 2 4/15<br>
# Пример 2: 2/9 * 6/5 -> 4/15<br>

# In[49]:


# Решение 4.
from fractions import Fraction
 
a = Fraction(input())
b = Fraction(input())
print(f"{a} + {b} = {a + b}")
print(f"{a} * {b} = {a * b}")


# In[ ]:




